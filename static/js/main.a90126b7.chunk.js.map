{"version":3,"sources":["components/PageNavLink.tsx","components/Header.tsx","pages/HomePage.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","api.ts","constants.ts","components/Loader/Loader.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","_ref","to","text","_jsx","NavLink","className","_ref2","isActive","classNames","children","Header","role","_jsxs","HomePage","PersonLink","person","Link","concat","slug","sex","name","PeopleTable","people","isLoading","_useParams$personSlug","useParams","personSlug","map","born","died","mother","find","personsMother","motherName","getMotherCellData","father","personsFather","fatherName","getFatherCellData","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","ErrorTypes","Loader","PeoplePage","_useState","useState","_useState2","_slicedToArray","setPeople","_useState3","_useState4","errorType","setErrorType","_useState5","_useState6","setIsLoading","errorNotification","UPLOAD","getPeopleFromServer","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","length","NOPEOPLE","t0","finish","stop","apply","arguments","useEffect","_Fragment","NotFoundPage","App","Routes","Route","path","element","Navigate","replace","index","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.a90126b7.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames('navbar-item', {\n        'has-background-grey-lighter': isActive,\n      })}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport { PageNavLink } from './PageNavLink';\n\nexport const Header: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n  isLoading: boolean;\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  isLoading,\n}) => {\n  const { personSlug = '' } = useParams();\n\n  if (isLoading) {\n    return null;\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const getMotherCellData = () => {\n            const mother = people.find(personsMother => (\n              personsMother.name === person.motherName\n            ));\n\n            if (mother) {\n              return <PersonLink person={mother} />;\n            }\n\n            return person.motherName || '-';\n          };\n\n          const getFatherCellData = () => {\n            const father = people.find(personsFather => (\n              personsFather.name === person.fatherName\n            ));\n\n            if (father) {\n              return <PersonLink person={father} />;\n            }\n\n            return person.fatherName || '-';\n          };\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={classNames(\n                { 'has-background-warning': person.slug === personSlug },\n              )}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                { getMotherCellData() }\n              </td>\n              <td>\n                { getFatherCellData() }\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export enum ErrorTypes {\n  UPLOAD = 'upload',\n  NOPEOPLE = 'no people',\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { ErrorTypes } from '../constants';\nimport { Loader } from '../components/Loader';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorType, setErrorType] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const errorNotification = errorType === ErrorTypes.UPLOAD\n    ? (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    ) : (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n\n  const getPeopleFromServer = async () => {\n    setIsLoading(true);\n    try {\n      const response = await getPeople();\n\n      if (!response.length) {\n        setErrorType(ErrorTypes.NOPEOPLE);\n      }\n\n      setPeople(response);\n    } catch (error) {\n      setErrorType(ErrorTypes.UPLOAD);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {isLoading && (\n        <Loader />\n      )}\n\n      {(people && !errorType) ? (\n        <PeopleTable\n          people={people}\n          isLoading={isLoading}\n        />\n      ) : (\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {errorNotification}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Header />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<HomePage />}\n          />\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n          <Route\n            path=\"*\"\n            element={<NotFoundPage />}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}